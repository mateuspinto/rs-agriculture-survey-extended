root@8510368ae918:/opt/mlagro/sits-siam# python finetuning_original_sits_moco.py 
Using 16bit Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/3
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/3
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/3
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 3 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]

  | Name      | Type                      | Params | Mode 
----------------------------------------------------------------
0 | model     | OriginalSITSMoco          | 122 K  | train
1 | criterion | CrossEntropyLoss          | 0      | train
2 | train_oa  | MulticlassAccuracy        | 0      | train
3 | val_oa    | MulticlassAccuracy        | 0      | train
4 | test_oa   | MulticlassAccuracy        | 0      | train
5 | train_f1  | MulticlassCohenKappa      | 0      | train
6 | val_f1    | MulticlassCohenKappa      | 0      | train
7 | test_f1   | MulticlassCohenKappa      | 0      | train
8 | test_cm   | MulticlassConfusionMatrix | 0      | train
----------------------------------------------------------------
122 K     Trainable params
0         Non-trainable params
122 K     Total params
0.489     Total estimated model params size (MB)
44        Modules in train mode
0         Modules in eval mode
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (1) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.                      
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.59it/s, v_num=153, train_loss=0.688, train_oa=0.912, train_kappa=0.906, val_loss=1.320, val_oa=0.619, val_kappa=0.591]`Trainer.fit` stopped: `max_epochs=100` reached.                                                                                                                                                                                                                                                     
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.58it/s, v_num=153, train_loss=0.688, train_oa=0.912, train_kappa=0.906, val_loss=1.320, val_oa=0.619, val_kappa=0.591]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:215: Using `DistributedSampler` with the dataloaders. During `trainer.test()`, it is recommended to use `Trainer(devices=1, num_nodes=1)` to ensure each sample/batch gets evaluated exactly once. Otherwise, multi-device settings use `DistributedSampler` that replicates some samples to make sure all devices have same batch size in case of uneven inputs.
Testing DataLoader 0: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 8/8 [00:02<00:00,  2.95it/s]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       test_kappa                   nan
        test_loss           1.3556466102600098
         test_oa            0.6246998906135559
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
tensor([[52182,   228,  1149,  2757,   611, 18525,   231,    85,   564,   660,   381,  2607, 10716,  2129,  8008],
        [    5,   205,     5,    17,     5,     6,     3,     3,    11,    29,    10,     8,     4,     8,    11],
        [   87,   111, 16140,   131,    30,   173,    40,   109,  1757,    80,   309,   448,    61,   184,   375],
        [  281,   815,    63, 16479,  1369,   108,   338,     6,    34,   719,    59,   168,   105,    63,   598],
        [    7,    68,     6,   160,   127,     8,     6,     2,     5,    63,     7,     8,     4,     8,    22],
        [  321,    22,    36,    65,    25,  1476,    18,    13,    55,    84,    35,    52,    28,    54,   123],
        [    8,     2,    10,    23,     7,    11,  3388,     2,     4,    55,     2,     1,     2,     0,    16],
        [    0,     1,     8,     0,     0,     2,     2,   343,    28,     1,    13,    10,     1,     3,     4],
        [    2,     7,    80,     8,     1,    18,     6,    46,  2277,     2,    46,    32,     5,    21,    41],
        [    5,    12,     3,    15,     9,     6,     4,     0,     4,    69,     6,     2,     0,     0,     4],
        [    0,     0,     5,     3,     0,     0,     0,     5,     9,     5,    24,    18,     0,     1,     8],
        [   20,     5,    11,     0,     3,    15,     1,    10,    19,     3,    62,   349,     9,    22,    47],
        [    6,     0,     0,     0,     1,     1,     0,     0,     0,     0,     0,     3,   200,     1,    14],
        [  206,    87,    60,    26,    22,   117,     5,     7,   136,    41,   146,   815,    71, 14577,  1407],
        [  419,    41,   122,   149,    46,   238,    33,    16,   121,    74,    98,   471,   500,   574,  1454]], device='cuda:0')
tensor([[52182,   228,  1149,  2757,   611, 18525,   231,    85,   564,   660,   381,  2607, 10716,  2129,  8008],
        [    5,   205,     5,    17,     5,     6,     3,     3,    11,    29,    10,     8,     4,     8,    11],
        [   87,   111, 16140,   131,    30,   173,    40,   109,  1757,    80,   309,   448,    61,   184,   375],
        [  281,   815,    63, 16479,  1369,   108,   338,     6,    34,   719,    59,   168,   105,    63,   598],
        [    7,    68,     6,   160,   127,     8,     6,     2,     5,    63,     7,     8,     4,     8,    22],
        [  321,    22,    36,    65,    25,  1476,    18,    13,    55,    84,    35,    52,    28,    54,   123],
        [    8,     2,    10,    23,     7,    11,  3388,     2,     4,    55,     2,     1,     2,     0,    16],
        [    0,     1,     8,     0,     0,     2,     2,   343,    28,     1,    13,    10,     1,     3,     4],
        [    2,     7,    80,     8,     1,    18,     6,    46,  2277,     2,    46,    32,     5,    21,    41],
        [    5,    12,     3,    15,     9,     6,     4,     0,     4,    69,     6,     2,     0,     0,     4],
        [    0,     0,     5,     3,     0,     0,     0,     5,     9,     5,    24,    18,     0,     1,     8],
        [   20,     5,    11,     0,     3,    15,     1,    10,    19,     3,    62,   349,     9,    22,    47],
        [    6,     0,     0,     0,     1,     1,     0,     0,     0,     0,     0,     3,   200,     1,    14],
        [  206,    87,    60,    26,    22,   117,     5,     7,   136,    41,   146,   815,    71, 14577,  1407],
        [  419,    41,   122,   149,    46,   238,    33,    16,   121,    74,    98,   471,   500,   574,  1454]], device='cuda:1')
tensor([[52182,   228,  1149,  2757,   611, 18525,   231,    85,   564,   660,   381,  2607, 10716,  2129,  8008],
        [    5,   205,     5,    17,     5,     6,     3,     3,    11,    29,    10,     8,     4,     8,    11],
        [   87,   111, 16140,   131,    30,   173,    40,   109,  1757,    80,   309,   448,    61,   184,   375],
        [  281,   815,    63, 16479,  1369,   108,   338,     6,    34,   719,    59,   168,   105,    63,   598],
        [    7,    68,     6,   160,   127,     8,     6,     2,     5,    63,     7,     8,     4,     8,    22],
        [  321,    22,    36,    65,    25,  1476,    18,    13,    55,    84,    35,    52,    28,    54,   123],
        [    8,     2,    10,    23,     7,    11,  3388,     2,     4,    55,     2,     1,     2,     0,    16],
        [    0,     1,     8,     0,     0,     2,     2,   343,    28,     1,    13,    10,     1,     3,     4],
        [    2,     7,    80,     8,     1,    18,     6,    46,  2277,     2,    46,    32,     5,    21,    41],
        [    5,    12,     3,    15,     9,     6,     4,     0,     4,    69,     6,     2,     0,     0,     4],
        [    0,     0,     5,     3,     0,     0,     0,     5,     9,     5,    24,    18,     0,     1,     8],
        [   20,     5,    11,     0,     3,    15,     1,    10,    19,     3,    62,   349,     9,    22,    47],
        [    6,     0,     0,     0,     1,     1,     0,     0,     0,     0,     0,     3,   200,     1,    14],
        [  206,    87,    60,    26,    22,   117,     5,     7,   136,    41,   146,   815,    71, 14577,  1407],
        [  419,    41,   122,   149,    46,   238,    33,    16,   121,    74,    98,   471,   500,   574,  1454]], device='cuda:2')