root@8510368ae918:/opt/mlagro/sits-siam# python finetuning_sits_raw.py 
Using 16bit Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/3
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/3
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/3
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 3 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]

   | Name       | Type                      | Params | Mode 
------------------------------------------------------------------
0  | backbone   | TransformerBackbone       | 111 K  | train
1  | bottleneck | PoolingBottleneck         | 0      | train
2  | classifier | ClassifierHead            | 11.1 K | train
3  | criterion  | CrossEntropyLoss          | 0      | train
4  | train_oa   | MulticlassAccuracy        | 0      | train
5  | val_oa     | MulticlassAccuracy        | 0      | train
6  | test_oa    | MulticlassAccuracy        | 0      | train
7  | train_f1   | MulticlassCohenKappa      | 0      | train
8  | val_f1     | MulticlassCohenKappa      | 0      | train
9  | test_f1    | MulticlassCohenKappa      | 0      | train
10 | test_cm    | MulticlassConfusionMatrix | 0      | train
------------------------------------------------------------------
122 K     Trainable params
0         Non-trainable params
122 K     Total params
0.490     Total estimated model params size (MB)
45        Modules in train mode
0         Modules in eval mode
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (1) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.                      
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:01<00:00,  0.53it/s, v_num=157, train_loss=0.254, train_oa=0.928, train_kappa=nan.0, val_loss=0.527, val_oa=0.867, val_kappa=nan.0]`Trainer.fit` stopped: `max_epochs=100` reached.                                                                                                                                                                                                                                                     
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:01<00:00,  0.52it/s, v_num=157, train_loss=0.254, train_oa=0.928, train_kappa=nan.0, val_loss=0.527, val_oa=0.867, val_kappa=nan.0]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:215: Using `DistributedSampler` with the dataloaders. During `trainer.test()`, it is recommended to use `Trainer(devices=1, num_nodes=1)` to ensure each sample/batch gets evaluated exactly once. Otherwise, multi-device settings use `DistributedSampler` that replicates some samples to make sure all devices have same batch size in case of uneven inputs.
Testing DataLoader 0: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  4.98it/s]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       test_kappa                   nan
        test_loss           0.4879927337169647
         test_oa            0.8722022771835327
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
tensor([[5715,    8,   26,    3,    2,    1,   13,   96,    0,    1,   10,   20,    1,   55,    1,   91,    4,    1],
        [   5, 1572,    3,   12,    0,    0,    0,    1,    1,   18,   45,    0,    0,    2,    0,    1,    7,    0],
        [  21,    3, 2549,    3,    0,    0,    3,   11,    1,    0,    0,    7,    1,    2,    5,    8,    0,    1],
        [   6,    8,    1,  487,    2,    3,    0,    2,    0,    7,   14,    0,    0,    2,    0,    1,    4,    0],
        [   5,    0,    0,    1,  370,    0,    0,    1,    1,    0,    1,    1,    0,    2,    0,    0,    1,    0],
        [  11,   23,    7,   15,    6,   82,    1,    2,    2,    6,   34,    2,    1,    3,    0,    4,   15,    0],
        [   1,    1,    3,    0,    0,    0,  187,   42,    1,    0,    1,   23,    0,    2,    0,    3,    0,    0],
        [  40,    1,    1,    0,    0,    0,    2, 2608,    0,    0,    0,    3,    0,    1,    0,   29,    0,    0],
        [   0,    0,    0,    0,    0,    0,    1,    0,  177,    0,    0,    3,    1,    0,    0,    0,    0,    0],
        [   5,  122,    0,    2,    1,    1,    0,    0,    0,   77,    8,    0,    0,    0,    1,    0,   11,    0],
        [  14,   37,    0,    7,    0,    1,    1,    1,    0,    1,  276,    3,    0,    2,    0,    3,    1,    0],
        [  25,    1,    9,    0,    1,    1,   11,   83,   19,    0,    0,  320,    0,    2,    0,   32,    1,    0],
        [   6,    0,    4,    0,    0,    0,   30,    2,    6,    0,    0,   86,    8,    1,    0,    3,    0,    0],
        [ 282,    4,    4,    1,    1,    2,   13,   20,    0,    1,    0,   10,    1,  257,    1,   36,    2,    0],
        [   3,    0,   14,    0,    0,    0,    2,    8,    0,    0,    0,    4,    0,    0,  217,    0,    0,    0],
        [  91,    0,    0,    0,    0,    0,    0,  116,    0,    0,    2,   13,    0,    2,    0,  365,    0,    0],
        [  23,   20,    5,    7,    8,    1,    1,    1,    0,   21,    1,    0,    0,    7,    0,    1,   47,    0],
        [  21,    1,   46,    0,    0,    0,   12,   15,    1,    0,    1,    2,    0,   13,    7,    3,    0,    1]], device='cuda:0')
tensor([[5715,    8,   26,    3,    2,    1,   13,   96,    0,    1,   10,   20,    1,   55,    1,   91,    4,    1],
        [   5, 1572,    3,   12,    0,    0,    0,    1,    1,   18,   45,    0,    0,    2,    0,    1,    7,    0],
        [  21,    3, 2549,    3,    0,    0,    3,   11,    1,    0,    0,    7,    1,    2,    5,    8,    0,    1],
        [   6,    8,    1,  487,    2,    3,    0,    2,    0,    7,   14,    0,    0,    2,    0,    1,    4,    0],
        [   5,    0,    0,    1,  370,    0,    0,    1,    1,    0,    1,    1,    0,    2,    0,    0,    1,    0],
        [  11,   23,    7,   15,    6,   82,    1,    2,    2,    6,   34,    2,    1,    3,    0,    4,   15,    0],
        [   1,    1,    3,    0,    0,    0,  187,   42,    1,    0,    1,   23,    0,    2,    0,    3,    0,    0],
        [  40,    1,    1,    0,    0,    0,    2, 2608,    0,    0,    0,    3,    0,    1,    0,   29,    0,    0],
        [   0,    0,    0,    0,    0,    0,    1,    0,  177,    0,    0,    3,    1,    0,    0,    0,    0,    0],
        [   5,  122,    0,    2,    1,    1,    0,    0,    0,   77,    8,    0,    0,    0,    1,    0,   11,    0],
        [  14,   37,    0,    7,    0,    1,    1,    1,    0,    1,  276,    3,    0,    2,    0,    3,    1,    0],
        [  25,    1,    9,    0,    1,    1,   11,   83,   19,    0,    0,  320,    0,    2,    0,   32,    1,    0],
        [   6,    0,    4,    0,    0,    0,   30,    2,    6,    0,    0,   86,    8,    1,    0,    3,    0,    0],
        [ 282,    4,    4,    1,    1,    2,   13,   20,    0,    1,    0,   10,    1,  257,    1,   36,    2,    0],
        [   3,    0,   14,    0,    0,    0,    2,    8,    0,    0,    0,    4,    0,    0,  217,    0,    0,    0],
        [  91,    0,    0,    0,    0,    0,    0,  116,    0,    0,    2,   13,    0,    2,    0,  365,    0,    0],
        [  23,   20,    5,    7,    8,    1,    1,    1,    0,   21,    1,    0,    0,    7,    0,    1,   47,    0],
        [  21,    1,   46,    0,    0,    0,   12,   15,    1,    0,    1,    2,    0,   13,    7,    3,    0,    1]], device='cuda:2')tensor([[5715,    8,   26,    3,    2,    1,   13,   96,    0,    1,   10,   20,    1,   55,    1,   91,    4,    1],
        [   5, 1572,    3,   12,    0,    0,    0,    1,    1,   18,   45,    0,    0,    2,    0,    1,    7,    0],
        [  21,    3, 2549,    3,    0,    0,    3,   11,    1,    0,    0,    7,    1,    2,    5,    8,    0,    1],
        [   6,    8,    1,  487,    2,    3,    0,    2,    0,    7,   14,    0,    0,    2,    0,    1,    4,    0],
        [   5,    0,    0,    1,  370,    0,    0,    1,    1,    0,    1,    1,    0,    2,    0,    0,    1,    0],
        [  11,   23,    7,   15,    6,   82,    1,    2,    2,    6,   34,    2,    1,    3,    0,    4,   15,    0],
        [   1,    1,    3,    0,    0,    0,  187,   42,    1,    0,    1,   23,    0,    2,    0,    3,    0,    0],
        [  40,    1,    1,    0,    0,    0,    2, 2608,    0,    0,    0,    3,    0,    1,    0,   29,    0,    0],
        [   0,    0,    0,    0,    0,    0,    1,    0,  177,    0,    0,    3,    1,    0,    0,    0,    0,    0],
        [   5,  122,    0,    2,    1,    1,    0,    0,    0,   77,    8,    0,    0,    0,    1,    0,   11,    0],
        [  14,   37,    0,    7,    0,    1,    1,    1,    0,    1,  276,    3,    0,    2,    0,    3,    1,    0],
        [  25,    1,    9,    0,    1,    1,   11,   83,   19,    0,    0,  320,    0,    2,    0,   32,    1,    0],
        [   6,    0,    4,    0,    0,    0,   30,    2,    6,    0,    0,   86,    8,    1,    0,    3,    0,    0],
        [ 282,    4,    4,    1,    1,    2,   13,   20,    0,    1,    0,   10,    1,  257,    1,   36,    2,    0],
        [   3,    0,   14,    0,    0,    0,    2,    8,    0,    0,    0,    4,    0,    0,  217,    0,    0,    0],
        [  91,    0,    0,    0,    0,    0,    0,  116,    0,    0,    2,   13,    0,    2,    0,  365,    0,    0],
        [  23,   20,    5,    7,    8,    1,    1,    1,    0,   21,    1,    0,    0,    7,    0,    1,   47,    0],
        [  21,    1,   46,    0,    0,    0,   12,   15,    1,    0,    1,    2,    0,   13,    7,    3,    0,    1]], device='cuda:1')