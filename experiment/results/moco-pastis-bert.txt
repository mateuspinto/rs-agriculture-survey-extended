root@8510368ae918:/opt/mlagro/sits-siam# python finetuning_original_sits_moco.py 
Using 16bit Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/3
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/3
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/3
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 3 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]

  | Name      | Type                      | Params | Mode 
----------------------------------------------------------------
0 | model     | OriginalSITSMoco          | 122 K  | train
1 | criterion | CrossEntropyLoss          | 0      | train
2 | train_oa  | MulticlassAccuracy        | 0      | train
3 | val_oa    | MulticlassAccuracy        | 0      | train
4 | test_oa   | MulticlassAccuracy        | 0      | train
5 | train_f1  | MulticlassCohenKappa      | 0      | train
6 | val_f1    | MulticlassCohenKappa      | 0      | train
7 | test_f1   | MulticlassCohenKappa      | 0      | train
8 | test_cm   | MulticlassConfusionMatrix | 0      | train
----------------------------------------------------------------
122 K     Trainable params
0         Non-trainable params
122 K     Total params
0.489     Total estimated model params size (MB)
44        Modules in train mode
0         Modules in eval mode
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (1) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.                      
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.65it/s, v_num=152, train_loss=0.313, train_oa=0.995, train_kappa=0.995, val_loss=0.382, val_oa=0.930, val_kappa=0.924]`Trainer.fit` stopped: `max_epochs=100` reached.                                                                                                                                                                                                                                                     
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.59it/s, v_num=152, train_loss=0.313, train_oa=0.995, train_kappa=0.995, val_loss=0.382, val_oa=0.930, val_kappa=0.924]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:215: Using `DistributedSampler` with the dataloaders. During `trainer.test()`, it is recommended to use `Trainer(devices=1, num_nodes=1)` to ensure each sample/batch gets evaluated exactly once. Otherwise, multi-device settings use `DistributedSampler` that replicates some samples to make sure all devices have same batch size in case of uneven inputs.
Testing DataLoader 0: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:06<00:00,  1.89it/s]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       test_kappa                   nan
        test_loss           0.45074257254600525
         test_oa            0.9165410995483398
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
tensor([[ 3684,     0,    89,     1,     4,     5,     7,     0,    12,     0,     0,     0,     2],
        [    0, 23722,   126,     8,   282,    20,     0,     0,     7,    58,     0,     1,    77],
        [    5,     1,  2128,     3,     0,     0,     1,     0,     3,    14,     0,     9,    16],
        [   37,     9,    66, 14105,    68,    33,     0,    18,    66,   176,     1,    20,    24],
        [    0,    42,    26,     0, 13109,     3,     0,     0,     0,     3,     0,     0,     9],
        [  159,   223,   168,   491,   203, 55139,   794,  2543,  3180,  1251,     8,   235,  2198],
        [    0,     6,    41,    13,     9,   186, 10287,   273,    65,   332,   182,   211,   136],
        [   79,    62,    88,   472,    23,  1684,   226, 47226,  2061,   467,   332,    92,   949],
        [   46,    46,    69,    15,    12,   191,    62,    35, 13421,   114,     9,    42,   290],
        [    0,     2,    25,    20,     0,    16,    10,    11,    12,  1334,    28,   195,    13],
        [    0,     0,     0,     0,     0,     0,     1,     0,     3,     3,  2958,     1,     2],
        [    0,     4,   186,   346,     1,   104,    50,    64,   112,  1542,   225, 72196,    88],
        [    0,    47,    92,   150,     5,   334,   108,    99,   652,   296,     7,    10, 32690]], device='cuda:0')
tensor([[ 3684,     0,    89,     1,     4,     5,     7,     0,    12,     0,     0,     0,     2],
        [    0, 23722,   126,     8,   282,    20,     0,     0,     7,    58,     0,     1,    77],
        [    5,     1,  2128,     3,     0,     0,     1,     0,     3,    14,     0,     9,    16],
        [   37,     9,    66, 14105,    68,    33,     0,    18,    66,   176,     1,    20,    24],
        [    0,    42,    26,     0, 13109,     3,     0,     0,     0,     3,     0,     0,     9],
        [  159,   223,   168,   491,   203, 55139,   794,  2543,  3180,  1251,     8,   235,  2198],
        [    0,     6,    41,    13,     9,   186, 10287,   273,    65,   332,   182,   211,   136],
        [   79,    62,    88,   472,    23,  1684,   226, 47226,  2061,   467,   332,    92,   949],
        [   46,    46,    69,    15,    12,   191,    62,    35, 13421,   114,     9,    42,   290],
        [    0,     2,    25,    20,     0,    16,    10,    11,    12,  1334,    28,   195,    13],
        [    0,     0,     0,     0,     0,     0,     1,     0,     3,     3,  2958,     1,     2],
        [    0,     4,   186,   346,     1,   104,    50,    64,   112,  1542,   225, 72196,    88],
        [    0,    47,    92,   150,     5,   334,   108,    99,   652,   296,     7,    10, 32690]], device='cuda:2')
tensor([[ 3684,     0,    89,     1,     4,     5,     7,     0,    12,     0,     0,     0,     2],
        [    0, 23722,   126,     8,   282,    20,     0,     0,     7,    58,     0,     1,    77],
        [    5,     1,  2128,     3,     0,     0,     1,     0,     3,    14,     0,     9,    16],
        [   37,     9,    66, 14105,    68,    33,     0,    18,    66,   176,     1,    20,    24],
        [    0,    42,    26,     0, 13109,     3,     0,     0,     0,     3,     0,     0,     9],
        [  159,   223,   168,   491,   203, 55139,   794,  2543,  3180,  1251,     8,   235,  2198],
        [    0,     6,    41,    13,     9,   186, 10287,   273,    65,   332,   182,   211,   136],
        [   79,    62,    88,   472,    23,  1684,   226, 47226,  2061,   467,   332,    92,   949],
        [   46,    46,    69,    15,    12,   191,    62,    35, 13421,   114,     9,    42,   290],
        [    0,     2,    25,    20,     0,    16,    10,    11,    12,  1334,    28,   195,    13],
        [    0,     0,     0,     0,     0,     0,     1,     0,     3,     3,  2958,     1,     2],
        [    0,     4,   186,   346,     1,   104,    50,    64,   112,  1542,   225, 72196,    88],
        [    0,    47,    92,   150,     5,   334,   108,    99,   652,   296,     7,    10, 32690]], device='cuda:1')