root@8510368ae918:/opt/mlagro/sits-siam# python finetuning_sits_raw.py 
Using 16bit Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/3
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/3
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/3
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 3 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]

   | Name       | Type                      | Params | Mode 
------------------------------------------------------------------
0  | backbone   | TransformerBackbone       | 111 K  | train
1  | bottleneck | PoolingBottleneck         | 0      | train
2  | classifier | ClassifierHead            | 11.1 K | train
3  | criterion  | CrossEntropyLoss          | 0      | train
4  | train_oa   | MulticlassAccuracy        | 0      | train
5  | val_oa     | MulticlassAccuracy        | 0      | train
6  | test_oa    | MulticlassAccuracy        | 0      | train
7  | train_f1   | MulticlassCohenKappa      | 0      | train
8  | val_f1     | MulticlassCohenKappa      | 0      | train
9  | test_f1    | MulticlassCohenKappa      | 0      | train
10 | test_cm    | MulticlassConfusionMatrix | 0      | train
------------------------------------------------------------------
122 K     Trainable params
0         Non-trainable params
122 K     Total params
0.490     Total estimated model params size (MB)
45        Modules in train mode
0         Modules in eval mode
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (1) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.
Epoch 99: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:02<00:00,  0.48it/s, v_num=120, train_loss=0.289, train_oa=0.915, train_kappa=nan.0, val_loss=0.541, val_oa=0.858, val_kappa=nan.0]`Trainer.fit` stopped: `max_epochs=100` reached.                                                                                                                                                                                                                   
Epoch 99: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:02<00:00,  0.48it/s, v_num=120, train_loss=0.289, train_oa=0.915, train_kappa=nan.0, val_loss=0.541, val_oa=0.858, val_kappa=nan.0]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:215: Using `DistributedSampler` with the dataloaders. During `trainer.test()`, it is recommended to use `Trainer(devices=1, num_nodes=1)` to ensure each sample/batch gets evaluated exactly once. Otherwise, multi-device settings use `DistributedSampler` that replicates some samples to make sure all devices have same batch size in case of uneven inputs.
Testing DataLoader 0: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  5.18it/s]
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       test_kappa                   nan
        test_loss           0.5126022100448608
         test_oa            0.8592175841331482
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
tensor([[5713,    8,   26,   15,    6,    0,   11,   88,    3,    1,   17,   28,    1,   15,   10,   99,    7,    0],
        [   7, 1557,    3,   23,    2,    0,    0,    0,    1,   25,   43,    0,    0,    0,    0,    0,    6,    0],
        [  15,    3, 2558,    4,    0,    0,    5,    9,    2,    0,    0,   10,    0,    0,    5,    4,    0,    0],
        [   3,    7,    1,  480,    4,    0,    0,    5,    0,   12,   18,    0,    0,    0,    0,    3,    4,    0],
        [   4,    0,    1,    0,  372,    0,    0,    0,    0,    0,    2,    0,    0,    1,    0,    0,    3,    0],
        [  10,   28,    7,   16,   74,   25,    1,    1,    3,    0,   36,    3,    0,    1,    0,    2,    7,    0],
        [   3,    1,    5,    0,    0,    0,  174,   34,    2,    0,    1,   43,    0,    0,    0,    1,    0,    0],
        [  50,    0,    0,    0,    1,    0,    1, 2523,    0,    0,    2,   17,    0,    0,    0,   91,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  179,    0,    0,    2,    1,    0,    0,    0,    0,    0],
        [   6,   99,    0,    9,    5,    0,    0,    0,    0,  103,    2,    0,    0,    0,    0,    0,    4,    0],
        [  12,   32,    0,   32,    0,    0,    1,    0,    0,    1,  265,    2,    0,    0,    0,    1,    1,    0],
        [  19,    2,   11,    1,    3,    0,   15,   55,   22,    0,    0,  351,    1,    0,    3,   22,    0,    0],
        [   3,    0,    3,    0,    0,    0,   57,    2,   21,    0,    0,   53,    5,    0,    0,    1,    1,    0],
        [ 357,    2,    6,    5,    6,    0,   14,   26,    2,    1,    4,   24,    1,  152,    3,   31,    1,    0],
        [   2,    0,   20,    0,    0,    0,    3,    0,    0,    0,    0,    1,    0,    0,  222,    0,    0,    0],
        [ 104,    0,    1,    1,    0,    0,    1,   82,    0,    0,    1,   33,    0,    0,    0,  366,    0,    0],
        [  15,   14,    7,   11,   21,    3,    0,    0,    2,   23,    1,    0,    0,    4,    1,    0,   41,    0],
        [  13,    0,   59,    2,    1,    0,    5,   13,    0,    0,    1,    9,    0,    3,   15,    1,    0,    1]], device='cuda:0')
tensor([[5713,    8,   26,   15,    6,    0,   11,   88,    3,    1,   17,   28,    1,   15,   10,   99,    7,    0],
        [   7, 1557,    3,   23,    2,    0,    0,    0,    1,   25,   43,    0,    0,    0,    0,    0,    6,    0],
        [  15,    3, 2558,    4,    0,    0,    5,    9,    2,    0,    0,   10,    0,    0,    5,    4,    0,    0],
        [   3,    7,    1,  480,    4,    0,    0,    5,    0,   12,   18,    0,    0,    0,    0,    3,    4,    0],
        [   4,    0,    1,    0,  372,    0,    0,    0,    0,    0,    2,    0,    0,    1,    0,    0,    3,    0],
        [  10,   28,    7,   16,   74,   25,    1,    1,    3,    0,   36,    3,    0,    1,    0,    2,    7,    0],
        [   3,    1,    5,    0,    0,    0,  174,   34,    2,    0,    1,   43,    0,    0,    0,    1,    0,    0],
        [  50,    0,    0,    0,    1,    0,    1, 2523,    0,    0,    2,   17,    0,    0,    0,   91,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  179,    0,    0,    2,    1,    0,    0,    0,    0,    0],
        [   6,   99,    0,    9,    5,    0,    0,    0,    0,  103,    2,    0,    0,    0,    0,    0,    4,    0],
        [  12,   32,    0,   32,    0,    0,    1,    0,    0,    1,  265,    2,    0,    0,    0,    1,    1,    0],
        [  19,    2,   11,    1,    3,    0,   15,   55,   22,    0,    0,  351,    1,    0,    3,   22,    0,    0],
        [   3,    0,    3,    0,    0,    0,   57,    2,   21,    0,    0,   53,    5,    0,    0,    1,    1,    0],
        [ 357,    2,    6,    5,    6,    0,   14,   26,    2,    1,    4,   24,    1,  152,    3,   31,    1,    0],
        [   2,    0,   20,    0,    0,    0,    3,    0,    0,    0,    0,    1,    0,    0,  222,    0,    0,    0],
        [ 104,    0,    1,    1,    0,    0,    1,   82,    0,    0,    1,   33,    0,    0,    0,  366,    0,    0],
        [  15,   14,    7,   11,   21,    3,    0,    0,    2,   23,    1,    0,    0,    4,    1,    0,   41,    0],
        [  13,    0,   59,    2,    1,    0,    5,   13,    0,    0,    1,    9,    0,    3,   15,    1,    0,    1]], device='cuda:2')
tensor([[5713,    8,   26,   15,    6,    0,   11,   88,    3,    1,   17,   28,    1,   15,   10,   99,    7,    0],
        [   7, 1557,    3,   23,    2,    0,    0,    0,    1,   25,   43,    0,    0,    0,    0,    0,    6,    0],
        [  15,    3, 2558,    4,    0,    0,    5,    9,    2,    0,    0,   10,    0,    0,    5,    4,    0,    0],
        [   3,    7,    1,  480,    4,    0,    0,    5,    0,   12,   18,    0,    0,    0,    0,    3,    4,    0],
        [   4,    0,    1,    0,  372,    0,    0,    0,    0,    0,    2,    0,    0,    1,    0,    0,    3,    0],
        [  10,   28,    7,   16,   74,   25,    1,    1,    3,    0,   36,    3,    0,    1,    0,    2,    7,    0],
        [   3,    1,    5,    0,    0,    0,  174,   34,    2,    0,    1,   43,    0,    0,    0,    1,    0,    0],
        [  50,    0,    0,    0,    1,    0,    1, 2523,    0,    0,    2,   17,    0,    0,    0,   91,    0,    0],
        [   0,    0,    0,    0,    0,    0,    0,    0,  179,    0,    0,    2,    1,    0,    0,    0,    0,    0],
        [   6,   99,    0,    9,    5,    0,    0,    0,    0,  103,    2,    0,    0,    0,    0,    0,    4,    0],
        [  12,   32,    0,   32,    0,    0,    1,    0,    0,    1,  265,    2,    0,    0,    0,    1,    1,    0],
        [  19,    2,   11,    1,    3,    0,   15,   55,   22,    0,    0,  351,    1,    0,    3,   22,    0,    0],
        [   3,    0,    3,    0,    0,    0,   57,    2,   21,    0,    0,   53,    5,    0,    0,    1,    1,    0],
        [ 357,    2,    6,    5,    6,    0,   14,   26,    2,    1,    4,   24,    1,  152,    3,   31,    1,    0],
        [   2,    0,   20,    0,    0,    0,    3,    0,    0,    0,    0,    1,    0,    0,  222,    0,    0,    0],
        [ 104,    0,    1,    1,    0,    0,    1,   82,    0,    0,    1,   33,    0,    0,    0,  366,    0,    0],
        [  15,   14,    7,   11,   21,    3,    0,    0,    2,   23,    1,    0,    0,    4,    1,    0,   41,    0],
        [  13,    0,   59,    2,    1,    0,    5,   13,    0,    0,    1,    9,    0,    3,   15,    1,    0,    1]], device='cuda:1')