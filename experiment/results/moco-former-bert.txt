root@8510368ae918:/opt/mlagro/sits-siam# python finetuning_original_sits_moco.py 
Using 16bit Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/3
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/3
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/3
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 3 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]

  | Name      | Type                      | Params | Mode 
----------------------------------------------------------------
0 | model     | OriginalSITSMoco          | 122 K  | train
1 | criterion | CrossEntropyLoss          | 0      | train
2 | train_oa  | MulticlassAccuracy        | 0      | train
3 | val_oa    | MulticlassAccuracy        | 0      | train
4 | test_oa   | MulticlassAccuracy        | 0      | train
5 | train_f1  | MulticlassCohenKappa      | 0      | train
6 | val_f1    | MulticlassCohenKappa      | 0      | train
7 | test_f1   | MulticlassCohenKappa      | 0      | train
8 | test_cm   | MulticlassConfusionMatrix | 0      | train
----------------------------------------------------------------
122 K     Trainable params
0         Non-trainable params
122 K     Total params
0.489     Total estimated model params size (MB)
44        Modules in train mode
0         Modules in eval mode
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (1) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.                      
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.59it/s, v_num=150, train_loss=0.327, train_oa=0.995, train_kappa=0.995, val_loss=0.357, val_oa=0.939, val_kappa=0.934]`Trainer.fit` stopped: `max_epochs=100` reached.                                                                                                                                                                                                                                                     
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.53it/s, v_num=150, train_loss=0.327, train_oa=0.995, train_kappa=0.995, val_loss=0.357, val_oa=0.939, val_kappa=0.934]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:215: Using `DistributedSampler` with the dataloaders. During `trainer.test()`, it is recommended to use `Trainer(devices=1, num_nodes=1)` to ensure each sample/batch gets evaluated exactly once. Otherwise, multi-device settings use `DistributedSampler` that replicates some samples to make sure all devices have same batch size in case of uneven inputs.
Testing DataLoader 0: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:07<00:00,  1.82it/s]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       test_kappa                   nan
        test_loss           0.4461319148540497
         test_oa             0.91899573802948
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
tensor([[ 3703,     2,    80,     0,     1,     5,     4,     0,     1,     4,     0,     0,     4],
        [    2, 23556,   281,     2,   428,     1,     0,     0,     0,     0,     0,     0,    31],
        [    5,     5,  2143,     4,     1,     0,     1,     0,     1,    16,     0,     3,     1],
        [   32,    31,    68, 14105,    82,    50,     5,    26,    34,   126,     0,     2,    62],
        [    0,    93,    25,     2, 13068,     0,     0,     0,     0,     1,     0,     2,     1],
        [  151,   269,   197,   270,   270, 56884,  1409,  2265,   994,  1110,    25,   164,  2584],
        [    1,    30,    96,     4,     4,    91, 10792,    36,    24,   199,   194,   176,    94],
        [   45,   153,   122,   116,     5,  2341,   469, 48525,   682,   482,    60,    72,   689],
        [   30,    72,    78,    16,    30,   562,   150,    46, 12653,   115,    10,    25,   565],
        [    0,     2,    35,    20,     1,    22,    34,    15,     7,  1365,    26,   131,     8],
        [    0,     0,     0,     0,     0,     0,     2,     6,     1,     3,  2954,     2,     0],
        [    2,    10,   721,   375,     0,   116,   159,    83,    60,  3151,   117, 70086,    38],
        [    0,    44,   145,   132,    10,   383,   222,    85,   185,   247,    44,    46, 32947]], device='cuda:0')
tensor([[ 3703,     2,    80,     0,     1,     5,     4,     0,     1,     4,     0,     0,     4],
        [    2, 23556,   281,     2,   428,     1,     0,     0,     0,     0,     0,     0,    31],
        [    5,     5,  2143,     4,     1,     0,     1,     0,     1,    16,     0,     3,     1],
        [   32,    31,    68, 14105,    82,    50,     5,    26,    34,   126,     0,     2,    62],
        [    0,    93,    25,     2, 13068,     0,     0,     0,     0,     1,     0,     2,     1],
        [  151,   269,   197,   270,   270, 56884,  1409,  2265,   994,  1110,    25,   164,  2584],
        [    1,    30,    96,     4,     4,    91, 10792,    36,    24,   199,   194,   176,    94],
        [   45,   153,   122,   116,     5,  2341,   469, 48525,   682,   482,    60,    72,   689],
        [   30,    72,    78,    16,    30,   562,   150,    46, 12653,   115,    10,    25,   565],
        [    0,     2,    35,    20,     1,    22,    34,    15,     7,  1365,    26,   131,     8],
        [    0,     0,     0,     0,     0,     0,     2,     6,     1,     3,  2954,     2,     0],
        [    2,    10,   721,   375,     0,   116,   159,    83,    60,  3151,   117, 70086,    38],
        [    0,    44,   145,   132,    10,   383,   222,    85,   185,   247,    44,    46, 32947]], device='cuda:1')
tensor([[ 3703,     2,    80,     0,     1,     5,     4,     0,     1,     4,     0,     0,     4],
        [    2, 23556,   281,     2,   428,     1,     0,     0,     0,     0,     0,     0,    31],
        [    5,     5,  2143,     4,     1,     0,     1,     0,     1,    16,     0,     3,     1],
        [   32,    31,    68, 14105,    82,    50,     5,    26,    34,   126,     0,     2,    62],
        [    0,    93,    25,     2, 13068,     0,     0,     0,     0,     1,     0,     2,     1],
        [  151,   269,   197,   270,   270, 56884,  1409,  2265,   994,  1110,    25,   164,  2584],
        [    1,    30,    96,     4,     4,    91, 10792,    36,    24,   199,   194,   176,    94],
        [   45,   153,   122,   116,     5,  2341,   469, 48525,   682,   482,    60,    72,   689],
        [   30,    72,    78,    16,    30,   562,   150,    46, 12653,   115,    10,    25,   565],
        [    0,     2,    35,    20,     1,    22,    34,    15,     7,  1365,    26,   131,     8],
        [    0,     0,     0,     0,     0,     0,     2,     6,     1,     3,  2954,     2,     0],
        [    2,    10,   721,   375,     0,   116,   159,    83,    60,  3151,   117, 70086,    38],
        [    0,    44,   145,   132,    10,   383,   222,    85,   185,   247,    44,    46, 32947]], device='cuda:2')