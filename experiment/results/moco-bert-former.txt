root@8510368ae918:/opt/mlagro/sits-siam# python finetuning_original_sits_moco.py 
Using 16bit Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/3
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/3
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/3
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 3 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]

  | Name      | Type                      | Params | Mode 
----------------------------------------------------------------
0 | model     | OriginalSITSMoco          | 122 K  | train
1 | criterion | CrossEntropyLoss          | 0      | train
2 | train_oa  | MulticlassAccuracy        | 0      | train
3 | val_oa    | MulticlassAccuracy        | 0      | train
4 | test_oa   | MulticlassAccuracy        | 0      | train
5 | train_f1  | MulticlassCohenKappa      | 0      | train
6 | val_f1    | MulticlassCohenKappa      | 0      | train
7 | test_f1   | MulticlassCohenKappa      | 0      | train
8 | test_cm   | MulticlassConfusionMatrix | 0      | train
----------------------------------------------------------------
122 K     Trainable params
0         Non-trainable params
122 K     Total params
0.489     Total estimated model params size (MB)
44        Modules in train mode
0         Modules in eval mode
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (1) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.                      
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.65it/s, v_num=148, train_loss=0.716, train_oa=0.884, train_kappa=0.876, val_loss=1.200, val_oa=0.645, val_kappa=0.619]`Trainer.fit` stopped: `max_epochs=100` reached.                                                                                                                                                                                                                                                     
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.65it/s, v_num=148, train_loss=0.716, train_oa=0.884, train_kappa=0.876, val_loss=1.200, val_oa=0.645, val_kappa=0.619]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:215: Using `DistributedSampler` with the dataloaders. During `trainer.test()`, it is recommended to use `Trainer(devices=1, num_nodes=1)` to ensure each sample/batch gets evaluated exactly once. Otherwise, multi-device settings use `DistributedSampler` that replicates some samples to make sure all devices have same batch size in case of uneven inputs.
Testing DataLoader 0: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 8/8 [00:02<00:00,  2.99it/s]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       test_kappa                   nan
        test_loss           1.2232847213745117
         test_oa            0.6252429485321045
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
tensor([[52608,   467,  1225,  1628,  1960, 19619,   228,   156,   316,   756,   831,  2527, 10262,  2246,  6004],
        [    2,   206,     7,    14,    30,     6,     5,     3,     6,    19,     7,     5,     0,    13,     7],
        [   77,   162, 16386,   104,   193,   251,    52,   134,  1178,    98,   628,   302,    75,   171,   224],
        [  134,   627,    99, 15460,  3038,   135,   231,    12,    40,   607,   117,   122,    62,   191,   330],
        [    5,    52,     4,   131,   204,    10,     4,     2,     3,    48,     8,     7,     4,     9,    10],
        [  273,    36,    39,    31,    64,  1511,     6,    12,    21,    99,    50,    80,    29,    58,    98],
        [    6,     9,     8,    24,     9,     7,  3379,     2,     6,    57,     5,     6,     1,     3,     9],
        [    1,     2,     9,     1,     3,     1,     2,   343,    17,     3,    22,     8,     1,     3,     0],
        [    0,    14,   107,     4,     4,    20,     7,    95,  2210,     6,    60,    20,     7,    18,    20],
        [    5,    18,     3,    11,    18,     6,     3,     2,     0,    60,     5,     2,     0,     4,     2],
        [    1,     2,     4,     2,     2,     0,     0,     2,     4,     3,    36,    10,     4,     5,     3],
        [   16,     8,     7,     0,     2,    13,     2,    16,     7,     4,    95,   320,     8,    42,    36],
        [    3,     0,     1,     1,     0,     1,     0,     0,     1,     0,     2,     1,   204,     1,    11],
        [   83,    85,    18,    15,    40,    80,     8,    14,    13,    46,   510,   500,    76, 15331,   904],
        [  360,    74,   149,   124,   109,   244,    35,    40,    70,    72,   220,   414,   517,   801,  1127]], device='cuda:0')
tensor([[52608,   467,  1225,  1628,  1960, 19619,   228,   156,   316,   756,   831,  2527, 10262,  2246,  6004],
        [    2,   206,     7,    14,    30,     6,     5,     3,     6,    19,     7,     5,     0,    13,     7],
        [   77,   162, 16386,   104,   193,   251,    52,   134,  1178,    98,   628,   302,    75,   171,   224],
        [  134,   627,    99, 15460,  3038,   135,   231,    12,    40,   607,   117,   122,    62,   191,   330],
        [    5,    52,     4,   131,   204,    10,     4,     2,     3,    48,     8,     7,     4,     9,    10],
        [  273,    36,    39,    31,    64,  1511,     6,    12,    21,    99,    50,    80,    29,    58,    98],
        [    6,     9,     8,    24,     9,     7,  3379,     2,     6,    57,     5,     6,     1,     3,     9],
        [    1,     2,     9,     1,     3,     1,     2,   343,    17,     3,    22,     8,     1,     3,     0],
        [    0,    14,   107,     4,     4,    20,     7,    95,  2210,     6,    60,    20,     7,    18,    20],
        [    5,    18,     3,    11,    18,     6,     3,     2,     0,    60,     5,     2,     0,     4,     2],
        [    1,     2,     4,     2,     2,     0,     0,     2,     4,     3,    36,    10,     4,     5,     3],
        [   16,     8,     7,     0,     2,    13,     2,    16,     7,     4,    95,   320,     8,    42,    36],
        [    3,     0,     1,     1,     0,     1,     0,     0,     1,     0,     2,     1,   204,     1,    11],
        [   83,    85,    18,    15,    40,    80,     8,    14,    13,    46,   510,   500,    76, 15331,   904],
        [  360,    74,   149,   124,   109,   244,    35,    40,    70,    72,   220,   414,   517,   801,  1127]], device='cuda:1')
tensor([[52608,   467,  1225,  1628,  1960, 19619,   228,   156,   316,   756,   831,  2527, 10262,  2246,  6004],
        [    2,   206,     7,    14,    30,     6,     5,     3,     6,    19,     7,     5,     0,    13,     7],
        [   77,   162, 16386,   104,   193,   251,    52,   134,  1178,    98,   628,   302,    75,   171,   224],
        [  134,   627,    99, 15460,  3038,   135,   231,    12,    40,   607,   117,   122,    62,   191,   330],
        [    5,    52,     4,   131,   204,    10,     4,     2,     3,    48,     8,     7,     4,     9,    10],
        [  273,    36,    39,    31,    64,  1511,     6,    12,    21,    99,    50,    80,    29,    58,    98],
        [    6,     9,     8,    24,     9,     7,  3379,     2,     6,    57,     5,     6,     1,     3,     9],
        [    1,     2,     9,     1,     3,     1,     2,   343,    17,     3,    22,     8,     1,     3,     0],
        [    0,    14,   107,     4,     4,    20,     7,    95,  2210,     6,    60,    20,     7,    18,    20],
        [    5,    18,     3,    11,    18,     6,     3,     2,     0,    60,     5,     2,     0,     4,     2],
        [    1,     2,     4,     2,     2,     0,     0,     2,     4,     3,    36,    10,     4,     5,     3],
        [   16,     8,     7,     0,     2,    13,     2,    16,     7,     4,    95,   320,     8,    42,    36],
        [    3,     0,     1,     1,     0,     1,     0,     0,     1,     0,     2,     1,   204,     1,    11],
        [   83,    85,    18,    15,    40,    80,     8,    14,    13,    46,   510,   500,    76, 15331,   904],
        [  360,    74,   149,   124,   109,   244,    35,    40,    70,    72,   220,   414,   517,   801,  1127]], device='cuda:2')