root@8510368ae918:/opt/mlagro/sits-siam# python finetuning_original_sits_moco.py 
Using 16bit Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/3
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/3
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/3
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 3 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]

  | Name      | Type                      | Params | Mode 
----------------------------------------------------------------
0 | model     | OriginalSITSMoco          | 122 K  | train
1 | criterion | CrossEntropyLoss          | 0      | train
2 | train_oa  | MulticlassAccuracy        | 0      | train
3 | val_oa    | MulticlassAccuracy        | 0      | train
4 | test_oa   | MulticlassAccuracy        | 0      | train
5 | train_f1  | MulticlassCohenKappa      | 0      | train
6 | val_f1    | MulticlassCohenKappa      | 0      | train
7 | test_f1   | MulticlassCohenKappa      | 0      | train
8 | test_cm   | MulticlassConfusionMatrix | 0      | train
----------------------------------------------------------------
122 K     Trainable params
0         Non-trainable params
122 K     Total params
0.489     Total estimated model params size (MB)
44        Modules in train mode
0         Modules in eval mode
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (1) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.                      
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.64it/s, v_num=136, train_loss=0.720, train_oa=0.916, train_kappa=0.910, val_loss=1.230, val_oa=0.651, val_kappa=0.626]`Trainer.fit` stopped: `max_epochs=100` reached.                                                                                                                                                                                                                                                     
Epoch 99: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.58it/s, v_num=136, train_loss=0.720, train_oa=0.916, train_kappa=0.910, val_loss=1.230, val_oa=0.651, val_kappa=0.626]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:215: Using `DistributedSampler` with the dataloaders. During `trainer.test()`, it is recommended to use `Trainer(devices=1, num_nodes=1)` to ensure each sample/batch gets evaluated exactly once. Otherwise, multi-device settings use `DistributedSampler` that replicates some samples to make sure all devices have same batch size in case of uneven inputs.
Testing DataLoader 0: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 8/8 [00:02<00:00,  2.92it/s]
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       test_kappa                   nan
        test_loss           1.4335308074951172
         test_oa            0.5623156428337097
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
tensor([[43207,   647,  1129,  1235,  1784, 30350,   328,   137,   228,  1244,   911,  2532, 12006,  1389,  3706],
        [    2,   222,     3,     9,    12,     8,     3,     2,     2,    32,     9,     9,     1,    10,     6],
        [   58,   299, 16628,    75,    71,   454,    29,   265,   644,   239,   472,   362,   108,   169,   162],
        [  145,   838,    75, 14448,  2983,   125,   612,     7,    16,  1187,   136,    99,    92,    98,   344],
        [    6,    56,     9,    98,   205,    11,     7,     3,     0,    72,     7,     9,     6,     5,     7],
        [  184,    39,    31,    19,    66,  1734,     9,    15,    14,   122,    21,    28,    37,    43,    45],
        [    6,     6,     9,    16,    14,    11,  3382,     3,     3,    57,     6,     2,     4,     3,     9],
        [    3,     3,     8,     0,     0,     5,     1,   358,     3,     4,    19,     5,     0,     4,     3],
        [    3,    33,   133,     3,     5,    56,     4,    96,  2108,    28,    54,    29,     6,    18,    16],
        [    6,    16,     3,    12,    12,     7,     2,     2,     1,    72,     2,     1,     0,     1,     2],
        [    1,     0,     4,     3,     1,     3,     0,     4,     3,     6,    32,    13,     1,     1,     6],
        [   19,     8,    10,     0,     4,    37,     1,    18,    11,    15,   107,   279,     9,    39,    19],
        [    6,     0,     0,     1,     1,     1,     0,     0,     1,     0,     1,     0,   209,     2,     4],
        [  200,   157,    23,    13,    46,   445,     7,    27,    29,   158,   571,   547,   107, 14642,   751],
        [  370,   101,   144,   108,    80,   511,    48,    28,    49,   139,   359,   384,   537,   648,   850]], device='cuda:0')
tensor([[43207,   647,  1129,  1235,  1784, 30350,   328,   137,   228,  1244,   911,  2532, 12006,  1389,  3706],
        [    2,   222,     3,     9,    12,     8,     3,     2,     2,    32,     9,     9,     1,    10,     6],
        [   58,   299, 16628,    75,    71,   454,    29,   265,   644,   239,   472,   362,   108,   169,   162],
        [  145,   838,    75, 14448,  2983,   125,   612,     7,    16,  1187,   136,    99,    92,    98,   344],
        [    6,    56,     9,    98,   205,    11,     7,     3,     0,    72,     7,     9,     6,     5,     7],
        [  184,    39,    31,    19,    66,  1734,     9,    15,    14,   122,    21,    28,    37,    43,    45],
        [    6,     6,     9,    16,    14,    11,  3382,     3,     3,    57,     6,     2,     4,     3,     9],
        [    3,     3,     8,     0,     0,     5,     1,   358,     3,     4,    19,     5,     0,     4,     3],
        [    3,    33,   133,     3,     5,    56,     4,    96,  2108,    28,    54,    29,     6,    18,    16],
        [    6,    16,     3,    12,    12,     7,     2,     2,     1,    72,     2,     1,     0,     1,     2],
        [    1,     0,     4,     3,     1,     3,     0,     4,     3,     6,    32,    13,     1,     1,     6],
        [   19,     8,    10,     0,     4,    37,     1,    18,    11,    15,   107,   279,     9,    39,    19],
        [    6,     0,     0,     1,     1,     1,     0,     0,     1,     0,     1,     0,   209,     2,     4],
        [  200,   157,    23,    13,    46,   445,     7,    27,    29,   158,   571,   547,   107, 14642,   751],
        [  370,   101,   144,   108,    80,   511,    48,    28,    49,   139,   359,   384,   537,   648,   850]], device='cuda:2')
tensor([[43207,   647,  1129,  1235,  1784, 30350,   328,   137,   228,  1244,   911,  2532, 12006,  1389,  3706],
        [    2,   222,     3,     9,    12,     8,     3,     2,     2,    32,     9,     9,     1,    10,     6],
        [   58,   299, 16628,    75,    71,   454,    29,   265,   644,   239,   472,   362,   108,   169,   162],
        [  145,   838,    75, 14448,  2983,   125,   612,     7,    16,  1187,   136,    99,    92,    98,   344],
        [    6,    56,     9,    98,   205,    11,     7,     3,     0,    72,     7,     9,     6,     5,     7],
        [  184,    39,    31,    19,    66,  1734,     9,    15,    14,   122,    21,    28,    37,    43,    45],
        [    6,     6,     9,    16,    14,    11,  3382,     3,     3,    57,     6,     2,     4,     3,     9],
        [    3,     3,     8,     0,     0,     5,     1,   358,     3,     4,    19,     5,     0,     4,     3],
        [    3,    33,   133,     3,     5,    56,     4,    96,  2108,    28,    54,    29,     6,    18,    16],
        [    6,    16,     3,    12,    12,     7,     2,     2,     1,    72,     2,     1,     0,     1,     2],
        [    1,     0,     4,     3,     1,     3,     0,     4,     3,     6,    32,    13,     1,     1,     6],
        [   19,     8,    10,     0,     4,    37,     1,    18,    11,    15,   107,   279,     9,    39,    19],
        [    6,     0,     0,     1,     1,     1,     0,     0,     1,     0,     1,     0,   209,     2,     4],
        [  200,   157,    23,    13,    46,   445,     7,    27,    29,   158,   571,   547,   107, 14642,   751],
        [  370,   101,   144,   108,    80,   511,    48,    28,    49,   139,   359,   384,   537,   648,   850]], device='cuda:1')