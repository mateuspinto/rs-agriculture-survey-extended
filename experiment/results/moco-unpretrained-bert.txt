root@8510368ae918:/opt/mlagro/sits-siam# python finetuning_original_sits_moco.py 
Using 16bit Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/3
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/3
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/3
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 3 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]

  | Name      | Type                      | Params | Mode 
----------------------------------------------------------------
0 | model     | OriginalSITSMoco          | 122 K  | train
1 | criterion | CrossEntropyLoss          | 0      | train
2 | train_oa  | MulticlassAccuracy        | 0      | train
3 | val_oa    | MulticlassAccuracy        | 0      | train
4 | test_oa   | MulticlassAccuracy        | 0      | train
5 | train_f1  | MulticlassCohenKappa      | 0      | train
6 | val_f1    | MulticlassCohenKappa      | 0      | train
7 | test_f1   | MulticlassCohenKappa      | 0      | train
8 | test_cm   | MulticlassConfusionMatrix | 0      | train
----------------------------------------------------------------
122 K     Trainable params
0         Non-trainable params
122 K     Total params
0.489     Total estimated model params size (MB)
44        Modules in train mode
0         Modules in eval mode
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (1) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.               
Epoch 99: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.63it/s, v_num=134, train_loss=0.307, train_oa=0.991, train_kappa=0.990, val_loss=0.354, val_oa=0.930, val_kappa=0.924]`Trainer.fit` stopped: `max_epochs=100` reached.                                                                                                                                                                                                                                              
Epoch 99: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.57it/s, v_num=134, train_loss=0.307, train_oa=0.991, train_kappa=0.990, val_loss=0.354, val_oa=0.930, val_kappa=0.924]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:215: Using `DistributedSampler` with the dataloaders. During `trainer.test()`, it is recommended to use `Trainer(devices=1, num_nodes=1)` to ensure each sample/batch gets evaluated exactly once. Otherwise, multi-device settings use `DistributedSampler` that replicates some samples to make sure all devices have same batch size in case of uneven inputs.
Testing DataLoader 0: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:06<00:00,  1.88it/s]
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       test_kappa                   nan
        test_loss           0.4097047448158264
         test_oa            0.9214848279953003
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
tensor([[ 3702,     5,    83,     0,     0,    10,     0,     0,     1,     1,     0,     0,     2],
        [   13, 23317,   264,     0,   439,     3,     0,     0,     0,    92,     0,     0,   173],
        [    9,     0,  2142,     6,    14,     1,     0,     0,     1,     0,     0,     1,     6],
        [   43,   134,    92, 13984,    45,    33,     5,    26,    29,   143,     0,     9,    80],
        [    0,     3,    28,     0, 13142,    12,     0,     0,     0,     0,     0,     0,     7],
        [  150,   140,   164,   308,   204, 56896,   820,  2697,   707,  1307,     9,   254,  2936],
        [    0,     5,    41,     5,     4,   168, 10545,    64,    24,   365,   201,   175,   144],
        [  104,     7,    84,    66,    48,  2322,   227, 48520,   656,   601,   187,    82,   857],
        [   65,    28,    96,    20,    25,   495,    42,    47, 12700,    99,    10,    39,   686],
        [    0,     2,    22,    16,     2,    18,    14,    29,     3,  1338,     9,   195,    18],
        [    0,     0,     0,     0,     0,     0,     2,     9,     0,     1,  2952,     1,     3],
        [    0,     2,   334,   343,     1,   122,    84,   115,    70,  2031,   142, 71593,    81],
        [    0,     3,   108,   164,     1,   752,    80,   160,   240,   215,    15,     9, 32743]], device='cuda:0')
tensor([[ 3702,     5,    83,     0,     0,    10,     0,     0,     1,     1,     0,     0,     2],
        [   13, 23317,   264,     0,   439,     3,     0,     0,     0,    92,     0,     0,   173],
        [    9,     0,  2142,     6,    14,     1,     0,     0,     1,     0,     0,     1,     6],
        [   43,   134,    92, 13984,    45,    33,     5,    26,    29,   143,     0,     9,    80],
        [    0,     3,    28,     0, 13142,    12,     0,     0,     0,     0,     0,     0,     7],
        [  150,   140,   164,   308,   204, 56896,   820,  2697,   707,  1307,     9,   254,  2936],
        [    0,     5,    41,     5,     4,   168, 10545,    64,    24,   365,   201,   175,   144],
        [  104,     7,    84,    66,    48,  2322,   227, 48520,   656,   601,   187,    82,   857],
        [   65,    28,    96,    20,    25,   495,    42,    47, 12700,    99,    10,    39,   686],
        [    0,     2,    22,    16,     2,    18,    14,    29,     3,  1338,     9,   195,    18],
        [    0,     0,     0,     0,     0,     0,     2,     9,     0,     1,  2952,     1,     3],
        [    0,     2,   334,   343,     1,   122,    84,   115,    70,  2031,   142, 71593,    81],
        [    0,     3,   108,   164,     1,   752,    80,   160,   240,   215,    15,     9, 32743]], device='cuda:1')
tensor([[ 3702,     5,    83,     0,     0,    10,     0,     0,     1,     1,     0,     0,     2],
        [   13, 23317,   264,     0,   439,     3,     0,     0,     0,    92,     0,     0,   173],
        [    9,     0,  2142,     6,    14,     1,     0,     0,     1,     0,     0,     1,     6],
        [   43,   134,    92, 13984,    45,    33,     5,    26,    29,   143,     0,     9,    80],
        [    0,     3,    28,     0, 13142,    12,     0,     0,     0,     0,     0,     0,     7],
        [  150,   140,   164,   308,   204, 56896,   820,  2697,   707,  1307,     9,   254,  2936],
        [    0,     5,    41,     5,     4,   168, 10545,    64,    24,   365,   201,   175,   144],
        [  104,     7,    84,    66,    48,  2322,   227, 48520,   656,   601,   187,    82,   857],
        [   65,    28,    96,    20,    25,   495,    42,    47, 12700,    99,    10,    39,   686],
        [    0,     2,    22,    16,     2,    18,    14,    29,     3,  1338,     9,   195,    18],
        [    0,     0,     0,     0,     0,     0,     2,     9,     0,     1,  2952,     1,     3],
        [    0,     2,   334,   343,     1,   122,    84,   115,    70,  2031,   142, 71593,    81],
        [    0,     3,   108,   164,     1,   752,    80,   160,   240,   215,    15,     9, 32743]], device='cuda:2')