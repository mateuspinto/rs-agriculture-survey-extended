root@8510368ae918:/opt/mlagro/sits-siam# python finetuning_original_sits_moco.py 
Using 16bit Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/logger_connector/logger_connector.py:75: Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `pytorch_lightning` package, due to potential conflicts with other packages in the ML ecosystem. For this reason, `logger=True` will use `CSVLogger` as the default logger, unless the `tensorboard` or `tensorboardX` packages are found. Please `pip install lightning[extra]` or one of them to enable TensorBoard support by default
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/3
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
/opt/conda/lib/python3.10/site-packages/torch/nn/modules/transformer.py:306: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(f"enable_nested_tensor is True, but self.use_nested_tensor is False because {why_not_sparsity_fast_path}")
Initializing distributed: GLOBAL_RANK: 2, MEMBER: 3/3
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/3
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 3 processes
----------------------------------------------------------------------------------------------------

LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]

  | Name      | Type                      | Params | Mode 
----------------------------------------------------------------
0 | model     | OriginalSITSMoco          | 122 K  | train
1 | criterion | CrossEntropyLoss          | 0      | train
2 | train_oa  | MulticlassAccuracy        | 0      | train
3 | val_oa    | MulticlassAccuracy        | 0      | train
4 | test_oa   | MulticlassAccuracy        | 0      | train
5 | train_f1  | MulticlassCohenKappa      | 0      | train
6 | val_f1    | MulticlassCohenKappa      | 0      | train
7 | test_f1   | MulticlassCohenKappa      | 0      | train
8 | test_cm   | MulticlassConfusionMatrix | 0      | train
----------------------------------------------------------------
122 K     Trainable params
0         Non-trainable params
122 K     Total params
0.489     Total estimated model params size (MB)
44        Modules in train mode
0         Modules in eval mode
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:298: The number of training batches (1) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.               
Epoch 99: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.73it/s, v_num=133, train_loss=0.286, train_oa=0.993, train_kappa=0.992, val_loss=0.305, val_oa=0.949, val_kappa=0.945]`Trainer.fit` stopped: `max_epochs=100` reached.                                                                                                                                                                                                                                              
Epoch 99: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1/1 [00:00<00:00,  1.64it/s, v_num=133, train_loss=0.286, train_oa=0.993, train_kappa=0.992, val_loss=0.305, val_oa=0.949, val_kappa=0.945]
LOCAL_RANK: 2 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2]
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1,2]
/opt/conda/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:215: Using `DistributedSampler` with the dataloaders. During `trainer.test()`, it is recommended to use `Trainer(devices=1, num_nodes=1)` to ensure each sample/batch gets evaluated exactly once. Otherwise, multi-device settings use `DistributedSampler` that replicates some samples to make sure all devices have same batch size in case of uneven inputs.
Testing DataLoader 0: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 13/13 [00:07<00:00,  1.80it/s]
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       test_kappa                   nan
        test_loss            0.368472158908844
         test_oa            0.9285942912101746
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
tensor([[ 3701,     2,    84,     0,     0,     1,     5,     0,     5,     1,     1,     0,     4],
        [    1, 23885,    94,     0,   260,    29,     0,     0,     0,     1,     0,     0,    31],
        [    5,     3,  2156,     5,     3,     0,     1,     0,     1,     2,     0,     1,     3],
        [   30,    28,   118, 13966,    64,    41,     5,    67,    32,   183,     0,    12,    77],
        [    0,    12,    33,     1, 13143,     0,     0,     0,     0,     2,     0,     0,     1],
        [  154,   299,   216,   260,   227, 57498,   912,  2778,   711,   630,     2,   341,  2564],
        [    3,    70,    76,     1,     5,   114, 10703,    43,    27,   254,    98,   226,   121],
        [   70,   116,    92,    13,     6,  2178,   278, 49004,   687,   368,    35,   111,   803],
        [   44,    45,   101,    17,    23,   359,    71,    89, 13016,    78,     3,    51,   455],
        [    0,     3,    44,     5,     0,    11,    25,    21,     3,  1411,     7,   119,    17],
        [    0,     0,     0,     0,     0,     0,     6,     0,     0,     0,  2958,     1,     3],
        [    0,     8,   643,    67,     1,    97,   102,   104,    39,  2222,    87, 71507,    41],
        [    0,    78,   116,   145,    10,   574,   202,   120,   149,   162,     5,    38, 32891]], device='cuda:0')
tensor([[ 3701,     2,    84,     0,     0,     1,     5,     0,     5,     1,     1,     0,     4],
        [    1, 23885,    94,     0,   260,    29,     0,     0,     0,     1,     0,     0,    31],
        [    5,     3,  2156,     5,     3,     0,     1,     0,     1,     2,     0,     1,     3],
        [   30,    28,   118, 13966,    64,    41,     5,    67,    32,   183,     0,    12,    77],
        [    0,    12,    33,     1, 13143,     0,     0,     0,     0,     2,     0,     0,     1],
        [  154,   299,   216,   260,   227, 57498,   912,  2778,   711,   630,     2,   341,  2564],
        [    3,    70,    76,     1,     5,   114, 10703,    43,    27,   254,    98,   226,   121],
        [   70,   116,    92,    13,     6,  2178,   278, 49004,   687,   368,    35,   111,   803],
        [   44,    45,   101,    17,    23,   359,    71,    89, 13016,    78,     3,    51,   455],
        [    0,     3,    44,     5,     0,    11,    25,    21,     3,  1411,     7,   119,    17],
        [    0,     0,     0,     0,     0,     0,     6,     0,     0,     0,  2958,     1,     3],
        [    0,     8,   643,    67,     1,    97,   102,   104,    39,  2222,    87, 71507,    41],
        [    0,    78,   116,   145,    10,   574,   202,   120,   149,   162,     5,    38, 32891]], device='cuda:2')
tensor([[ 3701,     2,    84,     0,     0,     1,     5,     0,     5,     1,     1,     0,     4],
        [    1, 23885,    94,     0,   260,    29,     0,     0,     0,     1,     0,     0,    31],
        [    5,     3,  2156,     5,     3,     0,     1,     0,     1,     2,     0,     1,     3],
        [   30,    28,   118, 13966,    64,    41,     5,    67,    32,   183,     0,    12,    77],
        [    0,    12,    33,     1, 13143,     0,     0,     0,     0,     2,     0,     0,     1],
        [  154,   299,   216,   260,   227, 57498,   912,  2778,   711,   630,     2,   341,  2564],
        [    3,    70,    76,     1,     5,   114, 10703,    43,    27,   254,    98,   226,   121],
        [   70,   116,    92,    13,     6,  2178,   278, 49004,   687,   368,    35,   111,   803],
        [   44,    45,   101,    17,    23,   359,    71,    89, 13016,    78,     3,    51,   455],
        [    0,     3,    44,     5,     0,    11,    25,    21,     3,  1411,     7,   119,    17],
        [    0,     0,     0,     0,     0,     0,     6,     0,     0,     0,  2958,     1,     3],
        [    0,     8,   643,    67,     1,    97,   102,   104,    39,  2222,    87, 71507,    41],
        [    0,    78,   116,   145,    10,   574,   202,   120,   149,   162,     5,    38, 32891]], device='cuda:1')